image: registry.gitlab.com/pages/hugo/hugo_extended:0.74.3

services:
  - docker:dind
  
# Immer Git-Branch/-Tag als Image-Tag nutzen
variables:
  K8S_DEPLOYMENT_NAME: hugo
  REPOSITORY_URL: 238737228879.dkr.ecr.eu-central-1.amazonaws.com/flutter-de
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - dockerize
  - release

# Build
.build: &build
  stage: build
  before_script:
    - apk upgrade
    - apk add --update nghttp2 nodejs npm
    - npm install
    - npm --prefix ./themes/fluttery install ./themes/fluttery
    - PATH=$(npm bin):$PATH
    - hugo version
  tags:
    - Node
  artifacts:
    paths:
    - public
    expire_in: 1 hour
  
Build Stage:
  <<: *build
  only:
    - main
    - master
  script:
    - npm run build:stage

Build Prod:
  <<: *build
  except:
    - main
    - master
  script:
    - npm run build:prod

#
# Static stage deploy
#
Dockerize Stage:
  stage: dockerize
  image: guss77/dind-awscli
  dependencies:
    - Build Stage
  tags:
    - Node
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - docker build -t ${REPOSITORY_URL}:latest .
    - docker push ${REPOSITORY_URL}:latest
  only:
    - main
    - master

Deploy Stage:
  stage: release
  image: lachlanevenson/k8s-kubectl
  dependencies:
    - Dockerize Stage
  tags:
    - Node
  retry: 2
  variables:
    GIT_STRATEGY: none
  only:
    - main
    - master
  tags:
    - coodoo-stage
  variables:
    KUBERNETES_NAMESPACE_OVERWRITE: "flutter-de"
    KUBERNETES_NAMESPACE: "flutter-de"
    NAMESPACE: "flutter-de"
    KUBERNETES_POD_ANNOTATIONS_1: "labels=flutter"
  script:
    - REGISTRY_IMAGE=${REPOSITORY_URL}:latest
    - kubectl set image deployment/${K8S_DEPLOYMENT_NAME} ${K8S_DEPLOYMENT_NAME}=$REGISTRY_IMAGE -n flutter-de
    - kubectl patch deployment ${K8S_DEPLOYMENT_NAME} -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"  -n flutter-de
    - kubectl rollout status deployment/${K8S_DEPLOYMENT_NAME} -n flutter-de
  environment:
    name: Stage
    url: https://stage.flutter.de

#
# Static live deploy
#
Deploy Live:
  dependencies:
    - Build Prod
  tags:
    - Node
  image: carimus/node-alpine-aws:node12
  stage: release
  script:
    - npm run deploy:s3
    - npm run cloudfront:invalidate
  only:
    - tags
  environment:
    name: Live
    url: https://www.flutter.de
